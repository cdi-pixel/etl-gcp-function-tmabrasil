name: Deploy Cloud Function (zip root + Terraform)

on:
  push:
    branches: [ "develop" ]
  pull_request:
    paths:
      - "main.py"
      - "requirements.txt"
      - "**/*.tf"
      - ".github/workflows/deploy-cloud-function.yml"

permissions:
  contents: read
  id-token: write   # necessário p/ WIF (OIDC)

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      # TF vars padrão (ajuste se quiser usar .tfvars)
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_region: us-central1
      TF_VAR_function_name: xlsx-folder-trigger
      TF_VAR_entry_point: entryPoint
      TF_VAR_runtime_service_account: cf-runtime@tmabrasil.iam.gserviceaccount.com
      TF_VAR_trigger_bucket_name: tmabrasil-function-bucket
      TF_VAR_object_match: arquivos/*.xlsx
      TF_VAR_manage_runtime_sa_bindings: false
      TF_VAR_manage_gcs_pubsub_binding: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Python só se você precisar rodar passos que usem Python (opcional para zip)
      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # NÃO instale deps no código-fonte: CF v2 resolve via requirements.txt no build
      # Em vez do antigo "Install deps into ./app", removemos essa etapa.

      - name: Build zip from repo root
        run: |
          mkdir -p build
          # cria o zip com arquivos da raiz; ignora itens supérfluos
          zip -r build/function.zip . \
            -x "build/*" \
               ".git/*" \
               ".github/*" \
               ".terraform/*" \
               ".terraform.lock.hcl" \
               "terraform.tfstate*" \
               "*.zip"
      - name: Show zip size
        run: du -h build/function.zip

      # --------- AUTENTICAÇÃO VIA WIF (sem chave JSON) ---------
      - name: Auth via Workload Identity Federation (WIF)
        uses: google-github-actions/auth@v2
        with:
          # Ex.: projects/70919570240/locations/global/workloadIdentityPools/github-pool-access/providers/github-provider
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          # Ex.: gh-deployer@tmabrasil.iam.gserviceaccount.com
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          export_environment_variables: true  # expõe ADC para Terraform/gcloud

      - name: Setup gcloud (opcional, útil p/ debug)
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false

      - name: Terraform Apply (develop)
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: terraform apply -auto-approve -input=false
