name: Deploy Cloud Function (zip app + Terraform)

on:
  push:
    branches: [ "develop" ]
  pull_request:
    paths:
      - "app/**"
      - "**/*.tf"
      - ".github/workflows/deploy-cloud-function.yml"

permissions:
  contents: read
  id-token: write   # necessário p/ WIF (OIDC)

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps into ./app
        run: |
          python -m pip install --upgrade pip
          if [ -f app/requirements.txt ]; then
            python -m pip install -r app/requirements.txt -t app/
          fi

      - name: Build zip from ./app
        run: |
          mkdir -p build
          cd app
          zip -r ../build/function.zip .

      - name: Show zip size
        run: du -h build/function.zip

      # --------- AUTENTICAÇÃO VIA WIF (sem chave JSON) ---------
      - name: Auth via Workload Identity Federation (WIF)
        uses: google-github-actions/auth@v2
        with:
          # Ex.: projects/70919570240/locations/global/workloadIdentityPools/github-pool-access/providers/github-provider
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          # Ex.: gh-deployer@tmabrasil.iam.gserviceaccount.com
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          export_environment_variables: true  # expõe ADC para Terraform/gcloud

      - name: Setup gcloud (opcional, útil p/ debug)
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: |
          terraform plan -input=false \
            -var="project_id=${{ env.GCP_PROJECT_ID }}"
        env:
          TF_VAR_project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Terraform Apply (develop)
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: |
          terraform apply -auto-approve -input=false \
            -var="project_id=${{ env.GCP_PROJECT_ID }}"
        env:
          TF_VAR_project_id: ${{ env.GCP_PROJECT_ID }}
          TF_VAR_region: us-central1
          TF_VAR_function_name: xlsx-folder-trigger
          TF_VAR_entry_point: entryPoint
          TF_VAR_runtime_service_account: cf-runtime@tmabrasil.iam.gserviceaccount.com
